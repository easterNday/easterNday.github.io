import{_ as o,M as r,p as s,q as i,R as e,t as n,N as a}from"./framework-96b046e1.js";const l={},c=e("h1",{id:"unity-插件推荐",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#unity-插件推荐","aria-hidden":"true"},"#"),n(" Unity 插件推荐")],-1),u={id:"unittask",tabindex:"-1"},d=e("a",{class:"header-anchor",href:"#unittask","aria-hidden":"true"},"#",-1),h={href:"https://github.com/Cysharp",target:"_blank",rel:"noopener noreferrer"},_={href:"https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846",target:"_blank",rel:"noopener noreferrer"},p=e("p",null,"为 Unity 提供高效的无分配异步/等待集成。",-1),f=e("ul",null,[e("li",null,"基于结构 UniTask<T> 和自定义 AsyncMethodBuilder 实现零分配"),e("li",null,"使所有 Unity AsyncOperations 和协程可等待"),e("li",null,"基于 PlayerLoop 的任务（UniTask.Yield, UniTask.Delay,UniTask.DelayFrame等..），可以替换所有协程操作"),e("li",null,"MonoBehaviour 消息事件和 uGUI 事件作为可等待/异步可枚举"),e("li",null,"完全在 Unity 的 PlayerLoop 上运行，因此不使用线程并在 WebGL、wasm 等上运行。"),e("li",null,"异步 LINQ，具有 Channel 和 AsyncReactiveProperty"),e("li",null,"TaskTracker窗口防止内存泄漏"),e("li",null,"与 Task/ValueTask/IValueTaskSource 高度兼容的行为")],-1),k={href:"https://medium.com/@neuecc/unitask-v2-zero-allocation-async-await-for-unity-with-asynchronous-linq-1aa9c96aa7dd",target:"_blank",rel:"noopener noreferrer"},m={href:"https://medium.com/@neuecc/extends-unitywebrequest-via-async-decorator-pattern-advanced-techniques-of-unitask-ceff9c5ee846",target:"_blank",rel:"noopener noreferrer"},y={id:"xlua",tabindex:"-1"},b=e("a",{class:"header-anchor",href:"#xlua","aria-hidden":"true"},"#",-1),U={href:"https://github.com/Tencent/xLua",target:"_blank",rel:"noopener noreferrer"},x={href:"https://github.com/Tencent/xLua/blob/master/Assets/XLua/Doc/XLua%E6%95%99%E7%A8%8B.md",target:"_blank",rel:"noopener noreferrer"},L=e("p",null,"xLua为Unity、 .Net、 Mono等C#环境增加Lua脚本编程的能力，借助xLua，这些Lua代码可以方便的和C#相互调用",-1);function T(g,v){const t=r("ExternalLinkIcon");return s(),i("div",null,[c,e("h2",u,[d,n(),e("a",h,[n("UnitTask"),a(t)])]),e("blockquote",null,[e("p",null,[n("如何通过 "),e("a",_,[n("Unity安装"),a(t)]),n(" 请参考官方文档。")])]),p,f,e("p",null,[n("有关技术细节，请参阅博客文章："),e("a",k,[n("UniTask v2 — Unity 的零分配异步/等待，使用异步 LINQ"),a(t)])]),e("p",null,[n("有关高级技巧，请参阅博客文章："),e("a",m,[n("通过异步装饰器模式扩展 UnityWebRequest — UniTask 的高级技术"),a(t)])]),e("h2",y,[b,n(),e("a",U,[n("XLua"),a(t)])]),e("blockquote",null,[e("p",null,[n("具体使用请参考 "),e("a",x,[n("官方文档"),a(t)])])]),L])}const N=o(l,[["render",T],["__file","Unity-Plugins-Recommended.html.vue"]]);export{N as default};
