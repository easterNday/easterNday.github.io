import{_ as e,o as a,c as o,R as t,a5 as r,a6 as d,a7 as i}from"./chunks/framework.sHCxE_M5.js";const q=JSON.parse('{"title":"使用 DSU 尝鲜新系统","description":"","frontmatter":{},"headers":[],"relativePath":"Topic/Android/ROM/GSI/DSU.md","filePath":"Topic/Android/ROM/GSI/DSU.md","lastUpdated":1687685751000}'),l={name:"Topic/Android/ROM/GSI/DSU.md"},h=t('<h1 id="使用-dsu-尝鲜新系统" tabindex="-1">使用 DSU 尝鲜新系统 <a class="header-anchor" href="#使用-dsu-尝鲜新系统" aria-label="Permalink to &quot;使用 DSU 尝鲜新系统&quot;">​</a></h1><p><code>DSU</code> 是动态系统更新（Dynamic System Updates）的缩写，是一项在 Android 10 及以上版本中引入的功能，可以让用户在不重启设备的情况下更新系统镜像。</p><h2 id="必备条件" tabindex="-1">必备条件 <a class="header-anchor" href="#必备条件" aria-label="Permalink to &quot;必备条件&quot;">​</a></h2><ul><li>一台 Android 10+ 的安卓设备</li><li>支持动态分区 / 支持 GSI</li><li>对于设备有一定的了解</li></ul><blockquote><p>如果你不确定自己的设备是否支持动态分区特性，建议先下载安装 <a href="https://github.com/kevintresuelo/treble" target="_blank" rel="noreferrer">Treble Check</a> 这个应用打开看看。</p></blockquote><h2 id="原生-dsu-方案" tabindex="-1">原生 DSU 方案 <a class="header-anchor" href="#原生-dsu-方案" aria-label="Permalink to &quot;原生 DSU 方案&quot;">​</a></h2><p>首先我们需要开启 <a href="https://developer.android.google.cn/studio/debug/dev-options?hl=zh-cn" target="_blank" rel="noreferrer">开发者选项</a>，随后我们进入开发者选项，并找到如下图所示的 <code>DSU Loader</code> 选项。</p><div style="display:flex;"><img src="'+r+'" style="width:33%;margin-right:5px;"><img src="'+d+'" style="width:33%;margin-right:5px;"><img src="'+i+'" style="width:33%;"></div><p>点击 DSU Loader 后，系统会自动搜索并检查可用于当前设备的 GSI 镜像版本，不熟悉架构的朋友也无需在 ARM64、x86 之间纠结。选择自己需要的镜像进行安装即可。</p><p>目前大部分 Android 设备能够通过这个菜单下载安装的 GSI 镜像包括 Android 12L Beta 和 Android 13 Beta 两种，每个版本都同时提供含 GMS 服务和不含 GMS 服务的两个版本。</p><p>选好想要安装体验的版本，点击同意 Google 的使用条款后，系统就会在后台进行下载和安装了。准备就绪后你会看到一条通知，点击通知就能重启并体验新系统了。在 DSU 加载的系统中，我们可以随时通过通知中的重启按钮或直接重启设备来切换回主系统。</p><h2 id="使用-dsu-sideloader" tabindex="-1">使用 DSU Sideloader <a class="header-anchor" href="#使用-dsu-sideloader" aria-label="Permalink to &quot;使用 DSU Sideloader&quot;">​</a></h2><p>使用上面的方式实现的双系统会使得我们只能使用原生的安卓系统版本而非其他更多的 GSI 系统，因此如果您想使用 DSU 来实现加载其他更多的 GSI 的话，请选择 <a href="https://github.com/VegaBobo/DSU-Sideloader" target="_blank" rel="noreferrer">DSU Sideloader</a>，它是一款 GSI 安装工具，支持 <code>gz</code>、<code>xz</code>、<code>img</code> 和 <code>zip</code>（仅限 DSU 包）格式的 GSI。它可以帮助用户安装其他更多的 GSI 系统。</p><h3 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明" aria-label="Permalink to &quot;使用说明&quot;">​</a></h3><p>首先，你需要安装 DSU Sideloader 应用程序（下载时有 <code>apk</code> 和 <code>模块</code> 两种方式可以选择，请根据你的设备情况进行选择）。</p><p>随后，在您第一次打开应用程序时，你需要给某个文件夹赋予读/写权限，并新建一个文件夹并允许访问。这个文件夹将用于存储临时文件，例如从压缩文件中提取的 GSI。</p><blockquote><p>你不应该删除这个文件夹中的任何文件，因为这些文件是应用程序正常工作的必要文件。</p></blockquote><p>随后选择要安装的 GSI，并在安装前自定义安装选项。例如，你可以改变动态系统的用户数据大小。</p><p>点击“安装”按钮开始安装 GSI。安装完成后，你需要根据不同的操作模式进行下一步操作。</p><table><thead><tr><th>操作模式</th><th>特点</th></tr></thead><tbody><tr><td>ADB</td><td>默认操作模式，需要在电脑上运行 <code>adb</code> 命令来安装 GSI</td></tr><tr><td>Shizuku</td><td>需要在设备中安装 <code>Shizuku</code> 应用程序，支持跟踪安装进度和安装诊断</td></tr><tr><td>Root</td><td>需要设备获得 <code>Root 权限</code>，不需要任何特殊权限，支持 DynamicSystem API 和内置 DSU 安装程序</td></tr><tr><td>System mode</td><td>需要先安装 <code>Magisk 模块</code>并授权系统权限，支持所有功能，包括对某些设备的 SELinux 拒绝的修复和自定义 gsid 二进制文件</td></tr></tbody></table><blockquote><p>不同操作模式支持的功能不同。如果遇到 DSU 功能的问题，请尝试切换到 <code>System/Root</code> 操作模式。</p></blockquote><h3 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项" aria-label="Permalink to &quot;注意事项&quot;">​</a></h3><ul><li>请勿删除 DSU Sideloader 创建的临时文件夹中的任何文件。</li><li>推荐在 Stock ROM 上使用 DSU Sideloader。一些 Custom ROM 版本也可能工作正常。</li><li>如果你的设备已经获得 Root 权限，请确保使用的是 Magisk v24 或更高版本，旧版本可能会破坏 DSU 功能。</li><li>特别注意不要更改 GSI 文件的大小，因为这可能会影响安装过程的稳定性。让应用程序自动执行这个过程。</li><li>动态系统准备就绪后，请不要忘记通过通知或应用程序启动它。</li></ul><p>请注意，使用 DSU Loader 安装新系统可能会导致数据丢失，因此请务必备份你的重要数据。另外，由于该应用程序仍处于开发阶段，可能会存在一些问题和错误，使用前请谨慎考虑。</p><h2 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题" aria-label="Permalink to &quot;常见问题&quot;">​</a></h2><h3 id="q-dsu-安装完成且没有错误-但设备无法启动到已安装的-dsu-我该怎么办" tabindex="-1">Q: DSU 安装完成且没有错误，但设备无法启动到已安装的 DSU，我该怎么办？ <a class="header-anchor" href="#q-dsu-安装完成且没有错误-但设备无法启动到已安装的-dsu-我该怎么办" aria-label="Permalink to &quot;Q: DSU 安装完成且没有错误，但设备无法启动到已安装的 DSU，我该怎么办？&quot;">​</a></h3><p>A: 可能是 AVB 阻止设备启动已安装的映像，尝试闪烁禁用的 vbmeta，查阅更多信息。</p><h3 id="q-为什么不能设置高用户数据值" tabindex="-1">Q: 为什么不能设置高用户数据值？ <a class="header-anchor" href="#q-为什么不能设置高用户数据值" aria-label="Permalink to &quot;Q: 为什么不能设置高用户数据值？&quot;">​</a></h3><p>A:一些 Android 版本限制允许分配的最大值，这个限制是 40％。</p><h3 id="q-为什么存在-卸载-sd-选项" tabindex="-1">Q: 为什么存在“卸载 SD”选项？ <a class="header-anchor" href="#q-为什么存在-卸载-sd-选项" aria-label="Permalink to &quot;Q: 为什么存在“卸载 SD”选项？&quot;">​</a></h3><p>A: DSU 会优先在 SD 卡中分配，但在某些情况下不支持在 SD 卡中分配，该选项用于在设备存储中强制分配。</p><h3 id="q-为什么内置安装程序需要-root" tabindex="-1">Q: 为什么内置安装程序需要 root？ <a class="header-anchor" href="#q-为什么内置安装程序需要-root" aria-label="Permalink to &quot;Q: 为什么内置安装程序需要 root？&quot;">​</a></h3><p>A: 因为它使用 Android 的内部 DynamicSystem API，需要&quot;MANAGE_DYNAMIC_SYSTEM&quot;，这是一个签名保护级别，使用 root 是绕过它的便捷方法。</p><h3 id="q-我可以一直留在-dsu-的系统中尝鲜吗" tabindex="-1">Q: 我可以一直留在 DSU 的系统中尝鲜吗？ <a class="header-anchor" href="#q-我可以一直留在-dsu-的系统中尝鲜吗" aria-label="Permalink to &quot;Q: 我可以一直留在 DSU 的系统中尝鲜吗？&quot;">​</a></h3><p>A: 可以，只需要在 DSU 系统中运行指令 adb shell gsi_tool enable 即可开启 DSU 系统常驻模式，将 enable 替换为 disable 则会在下次重启后切换为主系统。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li><a href="https://github.com/VegaBobo/DSU-Sideloader" target="_blank" rel="noreferrer">DSU Sideloader</a></li><li><a href="https://xapoq.com/archives/82" target="_blank" rel="noreferrer">在 MIUI12 中使用 DSU Loader 安装原生双系统</a></li><li><a href="https://client.sspai.com/post/73603#!" target="_blank" rel="noreferrer">不刷机体验 Android 新系统，这个自带功能助你一键尝鲜</a></li></ul>',37),s=[h];function c(n,S,p,u,b,D){return a(),o("div",null,s)}const _=e(l,[["render",c]]);export{q as __pageData,_ as default};
