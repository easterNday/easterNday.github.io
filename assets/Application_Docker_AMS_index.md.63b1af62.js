import{_ as e,o as a,c as i,a as t}from"./app.12bed851.js";const r="/assets/AMS/Overview.png",d="/assets/AMS/VoD.png",l="/assets/AMS/LiveStream.png",c="/assets/AMS/AddPlayList.png",A=JSON.parse('{"title":"Ant Media Server","description":"","frontmatter":{},"headers":[{"level":2,"title":"社区版","slug":"社区版","link":"#社区版","children":[]},{"level":2,"title":"创建 Docker 容器","slug":"创建-docker-容器","link":"#创建-docker-容器","children":[]},{"level":2,"title":"设置无人值守直播","slug":"设置无人值守直播","link":"#设置无人值守直播","children":[{"level":3,"title":"主页展示","slug":"主页展示","link":"#主页展示","children":[]},{"level":3,"title":"视频上传","slug":"视频上传","link":"#视频上传","children":[]},{"level":3,"title":"直播设置","slug":"直播设置","link":"#直播设置","children":[]}]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"relativePath":"Application/Docker/AMS/index.md","lastUpdated":1684579055000}'),o={name:"Application/Docker/AMS/index.md"},n=t(`<h1 id="ant-media-server" tabindex="-1">Ant Media Server <a class="header-anchor" href="#ant-media-server" aria-hidden="true">#</a></h1><p>Ant Media Server 是一种流媒体引擎软件，它通过使用 WebRTC 技术提供自适应的超低延迟流媒体，延迟约为 0.5 秒或通过使用 HLS 或 CMAF 实现低延迟。Ant Media Server 在水平和垂直方向上都具有高度可扩展性，可以在本地或您选择的任何云提供商上运行。</p><h2 id="社区版" tabindex="-1">社区版 <a class="header-anchor" href="#社区版" aria-hidden="true">#</a></h2><ul><li>RTMP 摄取</li><li>RTMP、RTSP、MP4 和 HLS 支持</li><li>WebRTC 到 RTMP 适配器</li><li>网络摄像机支持</li><li>360 度直播和 VoD 流</li><li>直观的网络管理仪表板</li><li>录制直播流（MP4 和 HLS）</li><li>iOS 和安卓 RTMP SDK</li><li>开发工具包</li></ul><h2 id="创建-docker-容器" tabindex="-1">创建 Docker 容器 <a class="header-anchor" href="#创建-docker-容器" aria-hidden="true">#</a></h2><p>使用以下命令创建 Ant Media Server 的 Docker 容器：</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#babed8;">docker run  -p 5080:5080 --name ams -d --net=host nibrev/ant-media-server:latest</span></span>
<span class="line"><span style="color:#babed8;"></span></span></code></pre></div><p>其中，<code>-p</code> 参数用于指定容器端口与主机端口的映射，<code>--name</code> 参数用于指定容器的名称。</p><p>部署完成后，直接访问 <code>http://&lt;Your IP&gt;:5080</code> 就可以了</p><h2 id="设置无人值守直播" tabindex="-1">设置无人值守直播 <a class="header-anchor" href="#设置无人值守直播" aria-hidden="true">#</a></h2><h3 id="主页展示" tabindex="-1">主页展示 <a class="header-anchor" href="#主页展示" aria-hidden="true">#</a></h3><p>可以通过 Web 界面对 Ant Media Server 进行配置。在浏览器中输入 <code>http://localhost:5080</code> 进入 Ant Media Server 的控制台（在此之前，你还需要完成<code>账号注册</code>）。 打开网站后，第一件事是注册。注册完毕后，我们进入到首页，首页中会显示你当然运行系统的基础信息：</p><p><img src="`+r+'" alt="Overview"></p><p>在控制台中，可以进行实时流媒体传输和直播的配置，包括摄像头和麦克风的设置、直播流的创建和管理等。</p><h3 id="视频上传" tabindex="-1">视频上传 <a class="header-anchor" href="#视频上传" aria-hidden="true">#</a></h3><p>在主页里我们选择 <code>APPLICATIONS &gt; LiveApp &gt; VoD</code> 进入视频上传界面：</p><p><img src="'+d+'" alt="VoD"></p><p>点击 <code>Upload Vedio</code> 来上传你的视频。</p><h3 id="直播设置" tabindex="-1">直播设置 <a class="header-anchor" href="#直播设置" aria-hidden="true">#</a></h3><p>随后我们依旧在主页中选择 <code>APPLICATIONS &gt; LiveApp &gt; LiveStream</code> 进入到直播推流设置：</p><p><img src="'+l+'" alt="LiveStream"></p><p>随后点击按钮 <code>New Live Stream</code> ，选择其中的 <code>PlayList</code> ，这会弹出一个弹窗，我们在里面填写相关信息，并点击 <code>Add Playlist</code> 来添加视频。</p><p><img src="'+c+'" alt="AddPlayList"></p><blockquote><p>添加视频的时候是需要添加视频链接的，视频链接可以通过 <code>VoD</code> 界面中分享后获取的 <code>&lt;iframe&gt;</code> 标签中的 <code>src</code> 字段得到。</p></blockquote><p>做完这些工作后，我们回到 <code>LiveStream</code> 界面，点击刚添加的条目最右边的设置按钮，选择 <code>Edit RTMP Endpoint</code> 选项添加你的 <code>rtmp</code> 地址(一般是<code>推流地址</code>+<code>推流码</code>拼接而成)。</p><p>最后再次点击设置按钮，选择 <code>Start Broadcast</code> 即可开始推流。</p><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-hidden="true">#</a></h2><ul><li><a href="https://github.com/ant-media/Ant-Media-Server" target="_blank" rel="noreferrer">ant-media/Ant-Media-Server</a></li><li><a href="https://www.bilibili.com/read/cv22171708/" target="_blank" rel="noreferrer">无人值守 24 小时直播原来这么简单！附 Docker、群晖 NAS 配置</a></li><li><a href="https://mdnice.com/writing/9831485960554482a66731dd5e03c6a4" target="_blank" rel="noreferrer">2023啦 最新无人直播小白教程！</a></li></ul>',28),s=[n];function p(h,_,m,v,S,u){return a(),i("div",null,s)}const b=e(o,[["render",p]]);export{A as __pageData,b as default};
