import{_ as i,M as s,p as d,q as n,R as r,t as e,N as t,V as l,a1 as o}from"./framework-96b046e1.js";const c={},u=o(`<h1 id="linux-子系统的迁移" tabindex="-1"><a class="header-anchor" href="#linux-子系统的迁移" aria-hidden="true">#</a> Linux 子系统的迁移</h1><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介" aria-hidden="true">#</a> 简介</h2><p>在使用 <code>Windows Subsystem for Linux</code> (以下简称为 <code>WSL</code>) 的时候，其一般情况下是安装在系统盘 <code>C</code> 盘，但是就像安装一些应用程序一样，很多时候我们并不想将其安装在这里，所以很多时候我们需要对 <code>WSL</code> 进行迁移。</p><h2 id="迁移前准备" tabindex="-1"><a class="header-anchor" href="#迁移前准备" aria-hidden="true">#</a> 迁移前准备</h2><p>在迁移前我们首先要需要将当前正在运行的 <code>WSL</code> 停止运行，对应的命令行如下：</p><div class="language-ps line-numbers-mode" data-ext="ps"><pre class="language-ps"><code>wsl --shutdown
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="导出对应的分发版本" tabindex="-1"><a class="header-anchor" href="#导出对应的分发版本" aria-hidden="true">#</a> 导出对应的分发版本</h2><p>在停止了对应的分发版本后，我们还需要进行<strong>对应分发版本</strong>的导出，对应命令行如下：</p><div class="language-ps line-numbers-mode" data-ext="ps"><pre class="language-ps"><code>wsl --export &lt;DistributionName&gt; &lt;/path/to/where/u/want/to/save&gt;
# For example:
# wsl --export Ubuntu D:/export.tar
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>查看系统内已有所有的分发版本的命令行如下：</p><div class="language-ps line-numbers-mode" data-ext="ps"><pre class="language-ps"><code>wsl --list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="注销原有分发版本记录" tabindex="-1"><a class="header-anchor" href="#注销原有分发版本记录" aria-hidden="true">#</a> 注销原有分发版本记录</h2><p>导出完毕之后，我们要做的就是将原有的分发版本的记录进行注销，对应命令行命令如下：</p><div class="language-ps line-numbers-mode" data-ext="ps"><pre class="language-ps"><code>wsl --unregister &lt;DistributionName&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="重新导入分发版本" tabindex="-1"><a class="header-anchor" href="#重新导入分发版本" aria-hidden="true">#</a> 重新导入分发版本</h2><p>注销完毕之后，我们选定一个新的位置，并将其重新导入，对于命令行如下：</p><div class="language-ps line-numbers-mode" data-ext="ps"><pre class="language-ps"><code>wsl --import &lt;DistributionName&gt; &lt;path/to/new/dirctory&gt; &lt;/path/to/where/u/saved&gt; --version 2
# For example:
# wsl --import Ubuntu D:\\export\\ D:\\export.tar --version 2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重新确定登录用户" tabindex="-1"><a class="header-anchor" href="#重新确定登录用户" aria-hidden="true">#</a> 重新确定登录用户</h2>`,18);function h(p,v){const a=s("RouterLink");return d(),n("div",null,[u,r("p",null,[e("在重新导入对应分发版本之后，我们再次登录对应版本之后可能遇到对应子系统的默认登陆用户并非自己之前设定的问题，此时我们需要对对应分发版本重新设置默认登陆用户，请参考 "),t(a,{to:"/Windows/Virtual-Machine/Introduction-of-WSL2.html"},{default:l(()=>[e("Linux 子系统 ")]),_:1}),e(" 一文中的介绍。")])])}const b=i(c,[["render",h],["__file","How-to-migrate-WSL.html.vue"]]);export{b as default};
