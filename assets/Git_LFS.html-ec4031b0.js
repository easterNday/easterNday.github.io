import{_ as d,M as i,p as r,q as o,N as n,V as a,a1 as l,R as s,t as e}from"./framework-96b046e1.js";const u={},m=l(`<h1 id="git-上传大文件夹" tabindex="-1"><a class="header-anchor" href="#git-上传大文件夹" aria-hidden="true">#</a> Git 上传大文件夹</h1><h2 id="什么是-git-lfs" tabindex="-1"><a class="header-anchor" href="#什么是-git-lfs" aria-hidden="true">#</a> 什么是 Git LFS</h2><p>Git LFS（Large File Storage） 是 Github 开发的一个 Git 的扩展，用于实现 Git 对大文件的支持。</p><p>简而言之，如果您遇到了无法将大文件（一般是指超过 100M 的文件）上传至 Github，那么您可以考虑此种方式来上传。</p><h2 id="安装-git-lfs" tabindex="-1"><a class="header-anchor" href="#安装-git-lfs" aria-hidden="true">#</a> 安装 Git LFS</h2><p>对于 Arch 系统来说，仅需要在命令行运行如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>yay <span class="token parameter variable">-S</span> git-lfs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其他系统请自行查找安装办法。</p><h2 id="初始化-git-lfs-库" tabindex="-1"><a class="header-anchor" href="#初始化-git-lfs-库" aria-hidden="true">#</a> 初始化 Git LFS 库</h2><p>如果您在某个项目中需要启用 Git LFS，那么您需要先使本仓库支持 Git LFS，启用支持请在命令行输入如下指令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> lfs <span class="token function">install</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="增加需要追踪的大型文件" tabindex="-1"><a class="header-anchor" href="#增加需要追踪的大型文件" aria-hidden="true">#</a> 增加需要追踪的大型文件</h2><p>开启支持后，我们可以使用 <code>git lfs track &lt;File&gt;</code> 来记录追踪您需要添加的大型文件。</p>`,13),p=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token comment"},'# git lfs track "path/to/file"'),e(`
`),s("span",{class:"token comment"},"# 示例："),e(`
`),s("span",{class:"token function"},"git"),e(" lfs track "),s("span",{class:"token string"},'"./README.md"'),e(`
`),s("span",{class:"token comment"},"# 如果您想要不再追踪，请使用："),e(`
`),s("span",{class:"token comment"},'# git lfs untrack "path/to/file"'),e(`
`),s("span",{class:"token comment"},"# 示例："),e(`
`),s("span",{class:"token function"},"git"),e(" lfs untrack "),s("span",{class:"token string"},'"./README.md"'),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),h=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token comment"},'# git lfs track "path/to/dir/*.type"'),e(`
`),s("span",{class:"token comment"},"# 示例："),e(`
`),s("span",{class:"token function"},"git"),e(" lfs track "),s("span",{class:"token string"},'"*.md"'),e(`
`),s("span",{class:"token function"},"git"),e(" lfs track "),s("span",{class:"token string"},'".config/*.md"'),e(`
`),s("span",{class:"token comment"},"# 如果您想要不再追踪，请使用："),e(`
`),s("span",{class:"token comment"},'# git lfs untrack "path/to/dir/*.type"'),e(`
`),s("span",{class:"token comment"},"# 示例："),e(`
`),s("span",{class:"token function"},"git"),e(" lfs untrack "),s("span",{class:"token string"},'"*.md"'),e(`
`),s("span",{class:"token function"},"git"),e(" lfs untrack "),s("span",{class:"token string"},'".config/*.md"'),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),g=s("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[s("pre",{class:"language-bash"},[s("code",null,[s("span",{class:"token comment"},'# git lfs track "path/to/dir/*"'),e(`
`),s("span",{class:"token comment"},"# 示例："),e(`
`),s("span",{class:"token function"},"git"),e(" lfs track "),s("span",{class:"token string"},'".config/*"'),e(`
`),s("span",{class:"token comment"},"# 如果您想要不再追踪，请使用："),e(`
`),s("span",{class:"token comment"},'# git lfs untrack "path/to/dir/*"'),e(`
`),s("span",{class:"token comment"},"# 示例："),e(`
`),s("span",{class:"token function"},"git"),e(" lfs untrack "),s("span",{class:"token string"},'".config/*"'),e(`
`)])]),s("div",{class:"line-numbers","aria-hidden":"true"},[s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"}),s("div",{class:"line-number"})])],-1),b=l(`<h2 id="查看已追踪文件" tabindex="-1"><a class="header-anchor" href="#查看已追踪文件" aria-hidden="true">#</a> 查看已追踪文件</h2><p>添加/追踪了需要上传的大型文件后，我们可以将目前所有被 Git LFS 管理的具体文件枚举出来：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> lfs ls-files
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="克隆支持-git-lfs-文件的仓库" tabindex="-1"><a class="header-anchor" href="#克隆支持-git-lfs-文件的仓库" aria-hidden="true">#</a> 克隆支持 Git LFS 文件的仓库</h2><p>目前最新版本的 <code>git clone &lt;url&gt;</code> 已经能够提供与 <code>git lfs clone &lt;url&gt;</code> 一致的性能，因此 <code>git lfs clone &lt;url&gt;</code> 已不再推荐使用。</p><h2 id="存储库清理" tabindex="-1"><a class="header-anchor" href="#存储库清理" aria-hidden="true">#</a> 存储库清理</h2><p>如果您的存储库已经用了很长一段时间，觉得存储库十分的臃肿，您可以尝试运行如下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> gc <span class="token parameter variable">--aggressive</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>该命令会对本地存储库进行更彻底清理和优化，因此会耗费较长时间。</p>`,9);function f(v,k){const t=i("CodeGroupItem"),c=i("CodeGroup");return r(),o("div",null,[m,n(c,null,{default:a(()=>[n(t,{title:"单个文件"},{default:a(()=>[p]),_:1}),n(t,{title:"指定类型"},{default:a(()=>[h]),_:1}),n(t,{title:"整个目录"},{default:a(()=>[g]),_:1})]),_:1}),b])}const x=d(u,[["render",f],["__file","Git_LFS.html.vue"]]);export{x as default};
