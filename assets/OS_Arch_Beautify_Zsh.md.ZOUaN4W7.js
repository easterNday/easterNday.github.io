import{$ as s,U as i,S as a,at as h}from"./chunks/framework.DgqaZlKJ.js";const u=JSON.parse('{"title":"Zsh 终端美化","description":"","frontmatter":{},"headers":[],"relativePath":"OS/Arch/Beautify/Zsh.md","filePath":"OS/Arch/Beautify/Zsh.md","lastUpdated":1704180282000}'),t={name:"OS/Arch/Beautify/Zsh.md"},e=h(`<h1 id="zsh-终端美化" tabindex="-1">Zsh 终端美化 <a class="header-anchor" href="#zsh-终端美化" aria-label="Permalink to &quot;Zsh 终端美化&quot;">​</a></h1><h2 id="-oh-my-zsh" tabindex="-1"> Oh-my-zsh <a class="header-anchor" href="#-oh-my-zsh" aria-label="Permalink to &quot; Oh-my-zsh&quot;">​</a></h2><p><a href="https://github.com/ohmyzsh/ohmyzsh" target="_blank" rel="noreferrer"><code>Oh My Zsh</code></a>是一个开源、社区驱动的框架，用于管理 Zsh 配置。</p><p>1） 手动安装</p><p>这部分的安装基本参考<a href="https://ohmyz.sh/#install" target="_blank" rel="noreferrer">官方文档</a>，或者您可以参考<a href="https://github.com/ohmyzsh/ohmyzsh/wiki" target="_blank" rel="noreferrer">Github 页面</a>。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-azSAv" id="tab-Miqm77I" checked="checked"><label for="tab-Miqm77I">通过 curl 安装 OMZ</label><input type="radio" name="group-azSAv" id="tab-4DSUgxY"><label for="tab-4DSUgxY">通过 wget 安装 OMZ</label></div><div class="blocks"><div class="language-sh vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">-O</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -)&quot;</span></span></code></pre></div></div></div><p>2） 利用 Pacman 安装</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-o6rsT" id="tab-sctlsLT" checked="checked"><label for="tab-sctlsLT">Paru</label></div><div class="blocks"><div class="language-bash vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">paru</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Sy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oh-my-zsh-git</span></span></code></pre></div></div></div><p>如果是通过这种方式安装，那么我们还需要在命令行输入如下指令复制默认配置：</p><div class="language-BASH vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">BASH</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/oh-my-zsh/zshrc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.zshrc</span></span></code></pre></div><h2 id="-zim" tabindex="-1"> Zim <a class="header-anchor" href="#-zim" aria-label="Permalink to &quot; Zim&quot;">​</a></h2><p>现在本人已换用 <code>Zim</code> 框架来驱动我的 <code>Zsh</code>，安装 <code>Zim</code> 框架请在命令行输入如下指令:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/zimfw/install/master/install.zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> zsh</span></span></code></pre></div><p>随后即可安装完成。</p><h2 id="-插件推荐" tabindex="-1"> 插件推荐 <a class="header-anchor" href="#-插件推荐" aria-label="Permalink to &quot; 插件推荐&quot;">​</a></h2><p>本人一般只使用如下两个插件：</p><ul><li><a href="https://github.com/zsh-users/zsh-syntax-highlighting" target="_blank" rel="noreferrer">zsh-syntax-highlighting(命令语法高亮)</a></li><li><a href="https://github.com/zsh-users/zsh-autosuggestions" target="_blank" rel="noreferrer">zsh-autosuggestions(命令自动补全)</a></li></ul><p>插件安装建议参考官方文档。</p><h3 id="omz-自动更新插件" tabindex="-1">omz 自动更新插件 <a class="header-anchor" href="#omz-自动更新插件" aria-label="Permalink to &quot;omz 自动更新插件&quot;">​</a></h3><p>如果您使用 <code>Oh-my-zsh</code>, 通过手动安装的方式(官方文档的安装方式)可能无法做到自动更新，如果您不想自行手动更新，可以安装仓库中的对应插件，对应指令如下:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">paru</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Sy</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh-syntax-highlighting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> zsh-autosuggestions</span></span></code></pre></div><p>由于 OMZ 找不到这两个插件，因此我们要进行一下特殊解决，创立这两个插件的符号链接到 OMZ 的插件目录。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 仅适用于使用pacman安装了oh-my-zsh-git包的方式</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/zsh/plugins/zsh-syntax-highlighting</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${ZSH_CUSTOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.oh-my-zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">custom}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/plugins/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ln</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/share/zsh/plugins/zsh-autosuggestions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${ZSH_CUSTOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.oh-my-zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">custom}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/plugins/</span></span></code></pre></div><p>利用这些方式完成安装后，配置 <code>.zshrc</code> 文件，找到 plugins=(git)，在这里添加自己想要的插件就可，多个插件名称之间使用空格或者者换行分开（不能使用逗号）。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    git</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    zsh-autosuggestions</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">...</span></span></code></pre></div><p>重新打开终端或者终端输入 <code>zsh</code> 即可看到效果。</p><h2 id="󱚥-终端美化" tabindex="-1">󱚥 终端美化 <a class="header-anchor" href="#󱚥-终端美化" aria-label="Permalink to &quot;󱚥 终端美化&quot;">​</a></h2><h3 id="nerd-fonts" tabindex="-1">Nerd Fonts <a class="header-anchor" href="#nerd-fonts" aria-label="Permalink to &quot;Nerd Fonts&quot;">​</a></h3><p>如果您想要更好看的终端，可能大部分时候都会需要一个 <code>Nerd Font</code> 类型的字体，你可以使用如下指令来查看可安装的字体:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">paru</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Ss</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nerd-font</span></span></code></pre></div><p>个人推荐使用如下字体，这个字体文件较大，因为包含了全量的图标(其他一些字体可能缺少一些不常用字体):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">paru</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nerd-fonts-complete</span></span></code></pre></div><h3 id="powerlevel10k" tabindex="-1">Powerlevel10k <a class="header-anchor" href="#powerlevel10k" aria-label="Permalink to &quot;Powerlevel10k&quot;">​</a></h3><h4 id="_1-zim-安装" tabindex="-1">1. Zim 安装 <a class="header-anchor" href="#_1-zim-安装" aria-label="Permalink to &quot;1. Zim 安装&quot;">​</a></h4><p><code>Zim</code> 下主题的安装非常简单，只需要打开 <code>~/.zimrc</code>,而后在文件最后加入这一行:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zmodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> romkatv/powerlevel10k</span></span></code></pre></div><p>随后在终端中执行 <code>zimfw install</code> 或者直接重启终端即可查看到效果。</p><h4 id="_2-omz-安装" tabindex="-1">2. OMZ 安装 <a class="header-anchor" href="#_2-omz-安装" aria-label="Permalink to &quot;2. OMZ 安装&quot;">​</a></h4><p>同样的，<code>Oh-my-zsh</code> 安装主题也很简单，只需要在命令行执行如下指令即可:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://gitee.com/romkatv/powerlevel10k.git</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> \${ZSH_CUSTOM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.oh-my-zsh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">custom}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/themes/powerlevel10k</span></span></code></pre></div><h2 id="-常见问题" tabindex="-1"> 常见问题 <a class="header-anchor" href="#-常见问题" aria-label="Permalink to &quot; 常见问题&quot;">​</a></h2><h3 id="_1-git-syntax-for-and-does-not-work-with-zsh" tabindex="-1">1. Git syntax for <code>^..</code> and <code>..</code> does not work with zsh <a class="header-anchor" href="#_1-git-syntax-for-and-does-not-work-with-zsh" aria-label="Permalink to &quot;1. Git syntax for \`^..\` and \`..\` does not work with zsh&quot;">​</a></h3><p>在 zsh 中，使用 <code>git diff A^..B</code> 来查看 <code>A</code> 和 <code>B</code> 之间的差异。但是当执行此操作时，您可能得到以下内容:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zsh:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> no</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> matches</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> found:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> A^..B</span></span></code></pre></div><p>这是因为 <code>^</code> 是 <code>zsh</code> 文件名或历史记录扩展中的特殊字符（开启 <code>EXTENDED_GLOB</code> 选项，可以 <code>^</code> 作为文件名扩展的特殊模式字符）。</p><p>您可以使用 <code>noglob</code> 来避免将 <code>*</code>、<code>^</code> 和其他通配字符视被作为特殊引用。在 <code>.zshrc</code> 文件中添加如下行：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>alias git=&#39;noglob git&#39;</span></span></code></pre></div><p>或者您可以将命令更改为：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> diff</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;A^..B&#39;</span></span></code></pre></div><h2 id="-参考资料" tabindex="-1"> 参考资料 <a class="header-anchor" href="#-参考资料" aria-label="Permalink to &quot; 参考资料&quot;">​</a></h2><ul><li><a href="https://github.com/ohmyzsh/ohmyzsh/issues/4398" target="_blank" rel="noreferrer">Git syntax for ^.. and .. does not work with zsh</a></li></ul>`,51),l=[e];function n(p,o,d,k,r,c){return a(),i("div",null,l)}const F=s(t,[["render",n]]);export{u as __pageData,F as default};
