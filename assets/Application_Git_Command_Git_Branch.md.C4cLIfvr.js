import{$ as s,U as i,S as a,at as t}from"./chunks/framework.CU6vlNhx.js";const c=JSON.parse('{"title":"Github 分支操作","description":"","frontmatter":{},"headers":[],"relativePath":"Application/Git/Command/Git_Branch.md","filePath":"Application/Git/Command/Git_Branch.md","lastUpdated":1701054425000}'),e={name:"Application/Git/Command/Git_Branch.md"},h=t(`<h1 id="github-分支操作" tabindex="-1">Github 分支操作 <a class="header-anchor" href="#github-分支操作" aria-label="Permalink to &quot;Github 分支操作&quot;">​</a></h1><h2 id="分支更名" tabindex="-1">分支更名 <a class="header-anchor" href="#分支更名" aria-label="Permalink to &quot;分支更名&quot;">​</a></h2><p>在 Git 的默认分支名称从 &quot;master&quot; 更改为 &quot;main&quot; 后，如果你想将本地仓库的分支名也修改为 &quot;main&quot;，可以按照以下步骤操作：</p><ol><li>首先，将本地分支切换到 &quot;master&quot; 分支：<code>git checkout master</code></li><li>创建一个新的名为 &quot;main&quot; 的分支并切换到该分支：<code>git branch -m main</code></li><li>推送该分支到远程仓库：<code>git push -u origin main</code></li><li>删除名为 &quot;master&quot; 的远程分支：<code>git push origin :master</code></li></ol><p>完成上述操作后，你的本地仓库的默认分支名就变成了 &quot;main&quot;，而旧的 &quot;master&quot; 分支被删除了。在接下来的操作中，请记得使用新的默认分支名 &quot;main&quot;。</p><h2 id="删除标签和发布" tabindex="-1">删除标签和发布 <a class="header-anchor" href="#删除标签和发布" aria-label="Permalink to &quot;删除标签和发布&quot;">​</a></h2><p>在 <code>Github Actions</code> 中，你可以使用以下的脚本来删除所有的 <code>tag</code> 和 <code>release</code>：</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">- </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ClementTsang/delete-tag-and-release@v0.3.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    delete_release</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # default: false</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    tag_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">v0.1.0</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # tag name to delete</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    repo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&lt;owner&gt;/&lt;repoName&gt;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # target repo (optional). defaults to repo running this action</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  env</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    GITHUB_TOKEN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ secrets.GITHUB_TOKEN }}</span></span></code></pre></div><p>这个脚本会删除指定的 <code>tag</code> 和它关联的 <code>release</code>。如果你想删除所有的 <code>release</code>，你可以使用以下的命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\\\\t&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div><p>这个命令会列出所有的 <code>release</code> ，然后删除它们。你也可以在删除 <code>release</code> 的同时删除关联的 tag，只需要在命令中加上<code>--cleanup-tag</code>参数。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> awk</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -F</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;\\\\t&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;{print $3}&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> while</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> read</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> line</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">do</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> gh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> release</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> delete</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --cleanup-tag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">done</span></span></code></pre></div><p>请注意，这些操作都是不可逆的，所以在执行前请确保你真的想要删除这些 <code>tag</code> 和 <code>release</code>。</p>`,13),n=[h];function l(k,p,d,r,o,g){return a(),i("div",null,n)}const E=s(e,[["render",l]]);export{c as __pageData,E as default};
