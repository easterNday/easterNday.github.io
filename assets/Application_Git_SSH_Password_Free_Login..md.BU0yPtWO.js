import{$ as s,U as i,aq as e,S as t}from"./chunks/framework.B3hCfk8k.js";const k=JSON.parse('{"title":"SSH 免密登录","description":"","frontmatter":{},"headers":[],"relativePath":"Application/Git/SSH/Password_Free_Login..md","filePath":"Application/Git/SSH/Password_Free_Login..md","lastUpdated":1703835239000}'),h={name:"Application/Git/SSH/Password_Free_Login..md"};function o(n,a,d,l,p,r){return t(),i("div",null,a[0]||(a[0]=[e(`<h1 id="ssh-免密登录" tabindex="-1">SSH 免密登录 <a class="header-anchor" href="#ssh-免密登录" aria-label="Permalink to &quot;SSH 免密登录&quot;">​</a></h1><h2 id="前言" tabindex="-1">前言 <a class="header-anchor" href="#前言" aria-label="Permalink to &quot;前言&quot;">​</a></h2><p>本文介绍如何使用 ssh 免密登录远程服务器。</p><p>免密登录的原理是，在本地生成公钥和私钥，并将公钥上传到远程服务器，然后在远程服务器上将私钥写入 <code>~/.ssh/authorized_keys</code> 文件中。这样，远程服务器就可以通过公钥来验证本地的私钥，从而实现免密登录。</p><h2 id="生成公钥和私钥" tabindex="-1">生成公钥和私钥 <a class="header-anchor" href="#生成公钥和私钥" aria-label="Permalink to &quot;生成公钥和私钥&quot;">​</a></h2><p>在本地生成公钥和私钥，可以使用 <code>ssh-keygen</code> 命令。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-keygen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rsa</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;your_email@example.com&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-t 指定密钥类型，默认是 rsa。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#-C 指定注释，默认是用户的 email。</span></span></code></pre></div><p>执行后，会在 <code>~/.ssh/</code> 目录下生成 <code>id_rsa.pub</code> 和 <code>id_rsa</code> 两个文件， 其中，<code>id_rsa.pub</code> 是公钥。</p><h2 id="拷贝公钥到目标服务器" tabindex="-1">拷贝公钥到目标服务器 <a class="header-anchor" href="#拷贝公钥到目标服务器" aria-label="Permalink to &quot;拷贝公钥到目标服务器&quot;">​</a></h2><h3 id="_1-复制公钥到服务器" tabindex="-1">1. 复制公钥到服务器 <a class="header-anchor" href="#_1-复制公钥到服务器" aria-label="Permalink to &quot;1. 复制公钥到服务器&quot;">​</a></h3><p>将公钥 <code>id_rsa.pub</code> 上传到远程服务器 <code>~/.ssh/authorized_keys</code> 文件中。</p><p>首先在服务器上执行如下指令:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> localhost</span></span></code></pre></div><p>然后复制本地的公钥 <code>id_rsa.pub</code> 中的内容，粘贴到远程服务器的 <code>~/.ssh/authorized_keys</code> 文件中。</p><h3 id="_2-使用命令拷贝公钥到服务器" tabindex="-1">2. 使用命令拷贝公钥到服务器 <a class="header-anchor" href="#_2-使用命令拷贝公钥到服务器" aria-label="Permalink to &quot;2. 使用命令拷贝公钥到服务器&quot;">​</a></h3><p>当然 <code>ssh</code> 本身也支持使用命令的方式进行拷贝，我们只需要简单的在本地执行如下命令：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh-copy-id</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.ssh/id_rsa.pub</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@192.168.1.100</span></span></code></pre></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><p>使用免密登录，只需要在 ssh 命令中指定远程服务器的 IP 地址即可。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root@192.168.1.100</span></span></code></pre></div><h2 id="github-等网站免密登录" tabindex="-1">Github 等网站免密登录 <a class="header-anchor" href="#github-等网站免密登录" aria-label="Permalink to &quot;Github 等网站免密登录&quot;">​</a></h2><p><code>Github</code> 也支持免密登录，只需要在 <code>Github</code> 的设置中开启 <code>SSH</code> 并添加公钥即可。</p>`,22)]))}const u=s(h,[["render",o]]);export{k as __pageData,u as default};
